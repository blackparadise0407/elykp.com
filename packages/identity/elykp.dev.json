{
    "id": "110b52a1-a0b2-4608-88f9-7c8350524d43",
    "realm": "elykp",
    "notBefore": 0,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": true,
    "registrationEmailAsUsername": false,
    "rememberMe": true,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": true,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
        "realm": [
            {
                "id": "ab1d3d47-1ca7-4fb6-86a7-692073f18706",
                "name": "default-roles-elykp",
                "description": "${role_default-roles}",
                "composite": true,
                "composites": {
                    "realm": [
                        "offline_access",
                        "uma_authorization"
                    ],
                    "client": {
                        "account": [
                            "view-profile",
                            "manage-account"
                        ]
                    }
                },
                "clientRole": false,
                "containerId": "110b52a1-a0b2-4608-88f9-7c8350524d43",
                "attributes": {}
            },
            {
                "id": "26e3769c-6256-4fd3-84a8-b6b03a7bcdff",
                "name": "offline_access",
                "description": "${role_offline-access}",
                "composite": false,
                "clientRole": false,
                "containerId": "110b52a1-a0b2-4608-88f9-7c8350524d43",
                "attributes": {}
            },
            {
                "id": "6bfb91d9-5158-45ab-a63e-811ad5dbca1f",
                "name": "uma_authorization",
                "description": "${role_uma_authorization}",
                "composite": false,
                "clientRole": false,
                "containerId": "110b52a1-a0b2-4608-88f9-7c8350524d43",
                "attributes": {}
            }
        ],
        "client": {
            "realm-management": [
                {
                    "id": "26f42aec-1075-4609-969c-3b2895f2bb54",
                    "name": "realm-admin",
                    "description": "${role_realm-admin}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": [
                                "manage-events",
                                "manage-identity-providers",
                                "query-groups",
                                "query-realms",
                                "manage-clients",
                                "view-users",
                                "manage-realm",
                                "query-users",
                                "query-clients",
                                "view-realm",
                                "create-client",
                                "view-identity-providers",
                                "view-events",
                                "view-authorization",
                                "view-clients",
                                "manage-authorization",
                                "impersonation",
                                "manage-users"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "06946933-cf5c-4e6f-b5dd-92563a5032a6",
                    "attributes": {}
                },
                {
                    "id": "6cb9ca96-2103-4ce0-9ad0-f321fd28c33a",
                    "name": "manage-events",
                    "description": "${role_manage-events}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "06946933-cf5c-4e6f-b5dd-92563a5032a6",
                    "attributes": {}
                },
                {
                    "id": "7d0d1089-1c40-4135-ab3d-589c526b9818",
                    "name": "manage-identity-providers",
                    "description": "${role_manage-identity-providers}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "06946933-cf5c-4e6f-b5dd-92563a5032a6",
                    "attributes": {}
                },
                {
                    "id": "ef5061b6-ebcd-4cb6-9e00-138ec27685a2",
                    "name": "query-groups",
                    "description": "${role_query-groups}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "06946933-cf5c-4e6f-b5dd-92563a5032a6",
                    "attributes": {}
                },
                {
                    "id": "d1aeddcd-fcad-43be-842a-5e16b66becaa",
                    "name": "query-realms",
                    "description": "${role_query-realms}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "06946933-cf5c-4e6f-b5dd-92563a5032a6",
                    "attributes": {}
                },
                {
                    "id": "dab24886-7580-48f0-81e6-f278d06b1ac4",
                    "name": "manage-clients",
                    "description": "${role_manage-clients}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "06946933-cf5c-4e6f-b5dd-92563a5032a6",
                    "attributes": {}
                },
                {
                    "id": "18fbaebd-3b05-4322-b556-a5148ca57419",
                    "name": "view-users",
                    "description": "${role_view-users}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": [
                                "query-users",
                                "query-groups"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "06946933-cf5c-4e6f-b5dd-92563a5032a6",
                    "attributes": {}
                },
                {
                    "id": "0aab5986-9315-41be-a120-5be8b4fe5c9d",
                    "name": "manage-realm",
                    "description": "${role_manage-realm}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "06946933-cf5c-4e6f-b5dd-92563a5032a6",
                    "attributes": {}
                },
                {
                    "id": "3c69cd9c-1f17-41d2-b6e0-89b19432d65a",
                    "name": "query-clients",
                    "description": "${role_query-clients}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "06946933-cf5c-4e6f-b5dd-92563a5032a6",
                    "attributes": {}
                },
                {
                    "id": "304f1617-38a2-4c76-b86c-800e01b3fbf4",
                    "name": "query-users",
                    "description": "${role_query-users}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "06946933-cf5c-4e6f-b5dd-92563a5032a6",
                    "attributes": {}
                },
                {
                    "id": "34882e70-bd8c-40a9-9ea0-e971a0a047b3",
                    "name": "view-realm",
                    "description": "${role_view-realm}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "06946933-cf5c-4e6f-b5dd-92563a5032a6",
                    "attributes": {}
                },
                {
                    "id": "062984f9-ce02-4c4c-8545-630954b9bfd8",
                    "name": "create-client",
                    "description": "${role_create-client}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "06946933-cf5c-4e6f-b5dd-92563a5032a6",
                    "attributes": {}
                },
                {
                    "id": "e03349bd-ebdd-41e1-8e9e-a08a1dcfb173",
                    "name": "view-identity-providers",
                    "description": "${role_view-identity-providers}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "06946933-cf5c-4e6f-b5dd-92563a5032a6",
                    "attributes": {}
                },
                {
                    "id": "20af57f3-45f8-487e-b98c-1e992f947e75",
                    "name": "view-events",
                    "description": "${role_view-events}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "06946933-cf5c-4e6f-b5dd-92563a5032a6",
                    "attributes": {}
                },
                {
                    "id": "ad61a098-fca8-4c35-9b1c-9da01cf31a3b",
                    "name": "view-authorization",
                    "description": "${role_view-authorization}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "06946933-cf5c-4e6f-b5dd-92563a5032a6",
                    "attributes": {}
                },
                {
                    "id": "6dc0026c-e26d-4efa-8c73-9a97a04d216f",
                    "name": "impersonation",
                    "description": "${role_impersonation}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "06946933-cf5c-4e6f-b5dd-92563a5032a6",
                    "attributes": {}
                },
                {
                    "id": "111c4cf6-99c0-4030-bba9-10a6d09b9747",
                    "name": "manage-authorization",
                    "description": "${role_manage-authorization}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "06946933-cf5c-4e6f-b5dd-92563a5032a6",
                    "attributes": {}
                },
                {
                    "id": "95641281-9a6c-4136-9520-3f570887d667",
                    "name": "view-clients",
                    "description": "${role_view-clients}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": [
                                "query-clients"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "06946933-cf5c-4e6f-b5dd-92563a5032a6",
                    "attributes": {}
                },
                {
                    "id": "e6fd3a5e-28f4-41ea-b8d8-f3ea0e88139f",
                    "name": "manage-users",
                    "description": "${role_manage-users}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "06946933-cf5c-4e6f-b5dd-92563a5032a6",
                    "attributes": {}
                }
            ],
            "security-admin-console": [],
            "elykp-mm-client": [],
            "admin-cli": [],
            "account-console": [],
            "broker": [
                {
                    "id": "0f1605a0-95ac-4047-9b76-d8bf7e52b2c4",
                    "name": "read-token",
                    "description": "${role_read-token}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "8878ffc3-8f8d-46b0-bef3-1097b983f44c",
                    "attributes": {}
                }
            ],
            "account": [
                {
                    "id": "4030c1fd-50cb-480a-93a6-308e770f6a00",
                    "name": "manage-consent",
                    "description": "${role_manage-consent}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "account": [
                                "view-consent"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "ba3a0fe2-5066-41b2-b73a-8964dcc8b4e0",
                    "attributes": {}
                },
                {
                    "id": "ddb6cc66-5844-4abf-bf4b-d68c0272703a",
                    "name": "delete-account",
                    "description": "${role_delete-account}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "ba3a0fe2-5066-41b2-b73a-8964dcc8b4e0",
                    "attributes": {}
                },
                {
                    "id": "798aae60-274e-4e57-8d12-e8f9731e882b",
                    "name": "view-profile",
                    "description": "${role_view-profile}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "ba3a0fe2-5066-41b2-b73a-8964dcc8b4e0",
                    "attributes": {}
                },
                {
                    "id": "924ce1a8-87de-47f1-bced-d297bd0df203",
                    "name": "manage-account-links",
                    "description": "${role_manage-account-links}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "ba3a0fe2-5066-41b2-b73a-8964dcc8b4e0",
                    "attributes": {}
                },
                {
                    "id": "3c5aa11b-579a-48c1-a510-9896d4f6daa0",
                    "name": "view-consent",
                    "description": "${role_view-consent}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "ba3a0fe2-5066-41b2-b73a-8964dcc8b4e0",
                    "attributes": {}
                },
                {
                    "id": "5450e7e2-16d0-4554-9307-f6be6876f673",
                    "name": "view-groups",
                    "description": "${role_view-groups}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "ba3a0fe2-5066-41b2-b73a-8964dcc8b4e0",
                    "attributes": {}
                },
                {
                    "id": "4336d46d-082c-44ed-b67b-f7e589d1b1d5",
                    "name": "manage-account",
                    "description": "${role_manage-account}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "account": [
                                "manage-account-links"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "ba3a0fe2-5066-41b2-b73a-8964dcc8b4e0",
                    "attributes": {}
                },
                {
                    "id": "186cbc7c-d3c3-4f2e-92f3-90eb3d37dc4f",
                    "name": "view-applications",
                    "description": "${role_view-applications}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "ba3a0fe2-5066-41b2-b73a-8964dcc8b4e0",
                    "attributes": {}
                }
            ]
        }
    },
    "groups": [],
    "defaultRole": {
        "id": "ab1d3d47-1ca7-4fb6-86a7-692073f18706",
        "name": "default-roles-elykp",
        "description": "${role_default-roles}",
        "composite": true,
        "clientRole": false,
        "containerId": "110b52a1-a0b2-4608-88f9-7c8350524d43"
    },
    "requiredCredentials": [
        "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpPolicyCodeReusable": false,
    "otpSupportedApplications": [
        "totpAppGoogleName",
        "totpAppFreeOTPName"
    ],
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": [
        "ES256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
        "ES256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "scopeMappings": [
        {
            "clientScope": "offline_access",
            "roles": [
                "offline_access"
            ]
        }
    ],
    "clientScopeMappings": {
        "account": [
            {
                "client": "account-console",
                "roles": [
                    "manage-account",
                    "view-groups"
                ]
            }
        ]
    },
    "clients": [
        {
            "id": "ba3a0fe2-5066-41b2-b73a-8964dcc8b4e0",
            "clientId": "account",
            "name": "${client_account}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/elykp/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
                "/realms/elykp/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
                "web-origins",
                "acr",
                "profile",
                "roles",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "57545360-ec57-481e-b15d-39b7064f11a2",
            "clientId": "account-console",
            "name": "${client_account-console}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/elykp/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
                "/realms/elykp/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "post.logout.redirect.uris": "+",
                "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
                {
                    "id": "168f9af1-b951-450f-ac1a-3fc9c0d9a41b",
                    "name": "audience resolve",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-audience-resolve-mapper",
                    "consentRequired": false,
                    "config": {}
                }
            ],
            "defaultClientScopes": [
                "web-origins",
                "acr",
                "profile",
                "roles",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "e0887db6-82fb-4173-9ddb-5c5b12f69ec4",
            "clientId": "admin-cli",
            "name": "${client_admin-cli}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
                "web-origins",
                "acr",
                "profile",
                "roles",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "8878ffc3-8f8d-46b0-bef3-1097b983f44c",
            "clientId": "broker",
            "name": "${client_broker}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
                "web-origins",
                "acr",
                "profile",
                "roles",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "59c93249-95f9-4d8a-8db7-a01850680113",
            "clientId": "elykp-mm-client",
            "name": "elykp main module client",
            "description": "",
            "rootUrl": "http://127.0.0.1:5173",
            "adminUrl": "",
            "baseUrl": "http://127.0.0.1:5173",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": true,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
                "http://localhost:5173/signin-callback.html",
                "http://127.0.0.1:5173/signin-callback.html"
            ],
            "webOrigins": [
                "http://localhost:5173",
                "http://127.0.0.1:5173"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": true,
            "protocol": "openid-connect",
            "attributes": {
                "oidc.ciba.grant.enabled": "false",
                "backchannel.logout.session.required": "true",
                "post.logout.redirect.uris": "http://127.0.0.1:5173##http://localhost:5173",
                "display.on.consent.screen": "false",
                "oauth2.device.authorization.grant.enabled": "true",
                "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "defaultClientScopes": [
                "web-origins",
                "acr",
                "profile",
                "roles",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "06946933-cf5c-4e6f-b5dd-92563a5032a6",
            "clientId": "realm-management",
            "name": "${client_realm-management}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
                "web-origins",
                "acr",
                "profile",
                "roles",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "57ce5db8-7725-4a05-ab5f-bca8ac198b5b",
            "clientId": "security-admin-console",
            "name": "${client_security-admin-console}",
            "rootUrl": "${authAdminUrl}",
            "baseUrl": "/admin/elykp/console/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
                "/admin/elykp/console/*"
            ],
            "webOrigins": [
                "+"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "post.logout.redirect.uris": "+",
                "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
                {
                    "id": "96afea71-f8cc-4ee2-9cea-63c20957ddeb",
                    "name": "locale",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "locale",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "locale",
                        "jsonType.label": "String"
                    }
                }
            ],
            "defaultClientScopes": [
                "web-origins",
                "acr",
                "profile",
                "roles",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        }
    ],
    "clientScopes": [
        {
            "id": "778e7414-9824-4960-a7cf-a9bcc3cfe3fa",
            "name": "acr",
            "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "false"
            },
            "protocolMappers": [
                {
                    "id": "570e644b-9756-4254-b33a-9272d87ff7e0",
                    "name": "acr loa level",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-acr-mapper",
                    "consentRequired": false,
                    "config": {
                        "id.token.claim": "true",
                        "access.token.claim": "true"
                    }
                }
            ]
        },
        {
            "id": "d442abf9-44b5-4e67-bd23-7d3064f261eb",
            "name": "role_list",
            "description": "SAML role list",
            "protocol": "saml",
            "attributes": {
                "consent.screen.text": "${samlRoleListScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "25dc0592-fcc0-43ab-b41f-9080297999f1",
                    "name": "role list",
                    "protocol": "saml",
                    "protocolMapper": "saml-role-list-mapper",
                    "consentRequired": false,
                    "config": {
                        "single": "false",
                        "attribute.nameformat": "Basic",
                        "attribute.name": "Role"
                    }
                }
            ]
        },
        {
            "id": "1be85840-14df-4e16-80a2-cad2aef7c84e",
            "name": "profile",
            "description": "OpenID Connect built-in scope: profile",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${profileScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "a31a878b-901b-4c20-9403-0da7e44acd63",
                    "name": "birthdate",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "birthdate",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "birthdate",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "7b3b2fac-ea58-43ba-81da-2ff49f8245df",
                    "name": "full name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-full-name-mapper",
                    "consentRequired": false,
                    "config": {
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "userinfo.token.claim": "true"
                    }
                },
                {
                    "id": "3931b749-68c7-4f1f-8f5f-8b4a6e3ab4a7",
                    "name": "gender",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "gender",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "gender",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "46fe1428-cc3e-43dc-8585-694f04d63d79",
                    "name": "family name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "lastName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "family_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "7dd474c5-921c-4f55-ba33-2a9183af31e8",
                    "name": "profile",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "profile",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "profile",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "43ee7ec8-3aaa-47ca-9925-8bd65b87c98c",
                    "name": "username",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "preferred_username",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "70b85b80-351c-4cf2-a26a-fddbec52564e",
                    "name": "zoneinfo",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "zoneinfo",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "zoneinfo",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "c413f12a-2d22-44af-832b-b5ce919c6458",
                    "name": "middle name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "middleName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "middle_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "ca02e31f-eccd-44a7-af1e-b54e60f592cc",
                    "name": "updated at",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "updatedAt",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "updated_at",
                        "jsonType.label": "long"
                    }
                },
                {
                    "id": "1ba5838d-70c9-4541-a272-4db4518357a7",
                    "name": "picture",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "picture",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "picture",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "d23df126-a509-4308-9163-71182e45899a",
                    "name": "nickname",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "nickname",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "nickname",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "2f0c4a59-7273-4194-aae8-d7a7d7bf8e37",
                    "name": "locale",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "locale",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "locale",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "5c850dd2-d2a4-4096-8503-3596001385ae",
                    "name": "website",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "website",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "website",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "d3b9e904-bb0f-4b64-aa0b-980f08aa5872",
                    "name": "given name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "firstName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "given_name",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "73ff9f00-3266-4611-b6b8-b3c01fbbf8a4",
            "name": "phone",
            "description": "OpenID Connect built-in scope: phone",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${phoneScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "cec98703-d202-4481-a025-8cf093814b27",
                    "name": "phone number verified",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "phoneNumberVerified",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "phone_number_verified",
                        "jsonType.label": "boolean"
                    }
                },
                {
                    "id": "696f8dac-b2ae-46c6-a40e-9611903f6d04",
                    "name": "phone number",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "phoneNumber",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "phone_number",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "3cd03e97-de52-4c57-99a3-6ffc0e26450c",
            "name": "address",
            "description": "OpenID Connect built-in scope: address",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${addressScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "b8ef7035-547d-4ece-ae4f-d7501bbc143d",
                    "name": "address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-address-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute.formatted": "formatted",
                        "user.attribute.country": "country",
                        "user.attribute.postal_code": "postal_code",
                        "userinfo.token.claim": "true",
                        "user.attribute.street": "street",
                        "id.token.claim": "true",
                        "user.attribute.region": "region",
                        "access.token.claim": "true",
                        "user.attribute.locality": "locality"
                    }
                }
            ]
        },
        {
            "id": "ca281ca1-1ca5-4cc8-a3db-badda5a30c57",
            "name": "roles",
            "description": "OpenID Connect scope for add user roles to the access token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${rolesScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "8dc13db6-5e46-42d7-8d8a-8478ec65624f",
                    "name": "audience resolve",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-audience-resolve-mapper",
                    "consentRequired": false,
                    "config": {}
                },
                {
                    "id": "f1930b79-c9a5-4c58-aaf5-97639fccb8a2",
                    "name": "realm roles",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-realm-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute": "foo",
                        "access.token.claim": "true",
                        "claim.name": "realm_access.roles",
                        "jsonType.label": "String",
                        "multivalued": "true"
                    }
                },
                {
                    "id": "bdd211aa-f628-4ab7-b777-688d2ee1f562",
                    "name": "client roles",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-client-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute": "foo",
                        "access.token.claim": "true",
                        "claim.name": "resource_access.${client_id}.roles",
                        "jsonType.label": "String",
                        "multivalued": "true"
                    }
                }
            ]
        },
        {
            "id": "d41f275e-19da-48b3-986c-eb9a8023f37d",
            "name": "offline_access",
            "description": "OpenID Connect built-in scope: offline_access",
            "protocol": "openid-connect",
            "attributes": {
                "consent.screen.text": "${offlineAccessScopeConsentText}",
                "display.on.consent.screen": "true"
            }
        },
        {
            "id": "a7b14af9-83df-42a8-9f27-379dae2500a9",
            "name": "web-origins",
            "description": "OpenID Connect scope for add allowed web origins to the access token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "false",
                "consent.screen.text": ""
            },
            "protocolMappers": [
                {
                    "id": "f2036fa2-378b-4831-bcd6-26dff4ce6a18",
                    "name": "allowed web origins",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-allowed-origins-mapper",
                    "consentRequired": false,
                    "config": {}
                }
            ]
        },
        {
            "id": "14daa815-fe0b-4a89-81b4-f26c2e3e76c1",
            "name": "microprofile-jwt",
            "description": "Microprofile - JWT built-in scope",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "false"
            },
            "protocolMappers": [
                {
                    "id": "d5a40226-56b0-4cae-9750-7dacd7125d2b",
                    "name": "groups",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-realm-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "multivalued": "true",
                        "user.attribute": "foo",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "groups",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "c0a883cb-6667-42ad-9e83-e51564c0ddb0",
                    "name": "upn",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "upn",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "e3e32220-eac7-4ddc-848e-eb14b21e797b",
            "name": "email",
            "description": "OpenID Connect built-in scope: email",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${emailScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "47e7a126-ca22-4207-889f-2fe5f4b1544a",
                    "name": "email verified",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "emailVerified",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email_verified",
                        "jsonType.label": "boolean"
                    }
                },
                {
                    "id": "30bf1d13-0641-4475-8737-74ac289d2272",
                    "name": "email",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "email",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email",
                        "jsonType.label": "String"
                    }
                }
            ]
        }
    ],
    "defaultDefaultClientScopes": [
        "role_list",
        "profile",
        "email",
        "roles",
        "web-origins",
        "acr"
    ],
    "defaultOptionalClientScopes": [
        "offline_access",
        "address",
        "phone",
        "microprofile-jwt"
    ],
    "browserSecurityHeaders": {
        "contentSecurityPolicyReportOnly": "",
        "xContentTypeOptions": "nosniff",
        "xRobotsTag": "none",
        "xFrameOptions": "SAMEORIGIN",
        "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection": "1; mode=block",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": [
        "jboss-logging"
    ],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [],
    "identityProviderMappers": [],
    "components": {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
            {
                "id": "829734d8-8d5b-4ce0-995b-bf358b883da0",
                "name": "Allowed Protocol Mapper Types",
                "providerId": "allowed-protocol-mappers",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "allowed-protocol-mapper-types": [
                        "oidc-usermodel-attribute-mapper",
                        "oidc-full-name-mapper",
                        "oidc-sha256-pairwise-sub-mapper",
                        "saml-user-property-mapper",
                        "saml-user-attribute-mapper",
                        "oidc-usermodel-property-mapper",
                        "oidc-address-mapper",
                        "saml-role-list-mapper"
                    ]
                }
            },
            {
                "id": "711af4e8-878d-4bee-943c-8e08f97bfe88",
                "name": "Allowed Protocol Mapper Types",
                "providerId": "allowed-protocol-mappers",
                "subType": "authenticated",
                "subComponents": {},
                "config": {
                    "allowed-protocol-mapper-types": [
                        "oidc-address-mapper",
                        "oidc-usermodel-attribute-mapper",
                        "oidc-full-name-mapper",
                        "saml-user-property-mapper",
                        "saml-user-attribute-mapper",
                        "oidc-usermodel-property-mapper",
                        "saml-role-list-mapper",
                        "oidc-sha256-pairwise-sub-mapper"
                    ]
                }
            },
            {
                "id": "213ce374-39a0-4df8-97d3-d4538f1ded42",
                "name": "Trusted Hosts",
                "providerId": "trusted-hosts",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "host-sending-registration-request-must-match": [
                        "true"
                    ],
                    "client-uris-must-match": [
                        "true"
                    ]
                }
            },
            {
                "id": "290b353b-4f7c-4d59-8950-e24737d869cc",
                "name": "Consent Required",
                "providerId": "consent-required",
                "subType": "anonymous",
                "subComponents": {},
                "config": {}
            },
            {
                "id": "95c6aa46-bdab-4052-a609-e7d53aaaa9bf",
                "name": "Allowed Client Scopes",
                "providerId": "allowed-client-templates",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "allow-default-scopes": [
                        "true"
                    ]
                }
            },
            {
                "id": "2e8c6004-d334-4180-9e61-02108e73cc91",
                "name": "Max Clients Limit",
                "providerId": "max-clients",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "max-clients": [
                        "200"
                    ]
                }
            },
            {
                "id": "e1082e55-71a0-496b-aa8f-11636c17824a",
                "name": "Full Scope Disabled",
                "providerId": "scope",
                "subType": "anonymous",
                "subComponents": {},
                "config": {}
            },
            {
                "id": "ce73ca4c-f774-4e1e-a2e6-6edf699a99b0",
                "name": "Allowed Client Scopes",
                "providerId": "allowed-client-templates",
                "subType": "authenticated",
                "subComponents": {},
                "config": {
                    "allow-default-scopes": [
                        "true"
                    ]
                }
            }
        ],
        "org.keycloak.userprofile.UserProfileProvider": [
            {
                "id": "c3d01327-2851-4554-b2c4-d681e5b3b2b7",
                "providerId": "declarative-user-profile",
                "subComponents": {},
                "config": {}
            }
        ],
        "org.keycloak.keys.KeyProvider": [
            {
                "id": "38c06538-9f24-472b-abb4-495705a8c81b",
                "name": "aes-generated",
                "providerId": "aes-generated",
                "subComponents": {},
                "config": {
                    "kid": [
                        "61b46780-6ee4-4d1c-a690-760e16a69f75"
                    ],
                    "secret": [
                        "yUTXnJ4ZMgPcYNH9YBnUew"
                    ],
                    "priority": [
                        "100"
                    ]
                }
            },
            {
                "id": "7b45d45c-c988-4378-9e50-6a96aa084b76",
                "name": "rsa-enc-generated",
                "providerId": "rsa-enc-generated",
                "subComponents": {},
                "config": {
                    "privateKey": [
                        "MIIEowIBAAKCAQEA4L+t9yX9BclL5E3AcxuRm2Nvp/+fVmrkgfTpiJIzDvwtX5nX4QctJk6JOx9rsyjjAcFdRwq5mMne2d2GVClYwbX86PvpUVnngfL5PDuAnOYgcfLDpsJzZ2uGpuQ0MOdRHDgYYkRMllVcliE29V/XxvTW5Xks68q+IjsVIguH4QaacH/J4RbQGORqSx69d93Kl29jWOgUxdwDDpzYUGufRor9DXy6pORfjYnwJ7RaufqwPB/zPA2OdDXSIm9FzygELlk9xu9AfDoP1+Hal4wVDBw30bJJuJAqHmSY6nodCqocOvxjCfhYepNaXAoKSjxWlSZvIer+2QwVfU3Qe8qkIQIDAQABAoIBAAylvLxzvtFcipDGb1YK7x63cckacXUDfuhxR9MPpx/owQToO2XGaZwGP2K8WeszGdM3dnBRAjC+63OHK9AAo6YC/8B8rJyPWp/NdIkXMB2kNZ8z8h6oQqZHPsSVgvpdigr0fSrKfSTYmOU56UXVpubjUFSJhSWfuyNh/8Zyr6rSAUoFDeT7lDmhQvzHX+LeL0JTCWqifqQ6kHMdUKNVOqSyBctqx9WcnmPQgIxzvwc0Np00biTUDP/LwZbW83UlciPPyiL5HvfflDh+RuHSI5scZRjBF0ntL0V9vmWIbfu4S2QAXlixk6rvnM0iiqd8FdMeAFbR2bZ9SCMqOOcWq6ECgYEA+dW7IXpXJ+e2RtAO9IuIPskWsBxYYewdhilQTon3Km/WPnh3US/KYmA+bGp/G7TnaxmwLRvV76H6wLSXBf7e/yxrgXSO9V3XzeacaE2AQ1q38ayZxH94XQ8rQXyJNGL7MHTfmOLcn+2S8ptHugp3kun+Kdz1/cOVlqdrpwK4my8CgYEA5kt5JBhY1whC64ergSHHPOqCFsyr7luan3x/7AVaf0GOz2tVJsrdvLr6IsU9VZU7Z3cwPFILEYEaNVgmY5/o/+wjMDDUxlRZpMiPWLzs5m4y1itUfctir3EqoitigRQW05je/JzXHU4F+gbGNx6JiE4nebCJPHqZk1nib1oAoa8CgYBkCaMOurAfeHbSUAlM/noludtt1UvGmgcQa4aOjEv+IB4HkbElPx+o2KTmQJZ4/60Sg4y540V82L1RYH6Alhew0ZaSlZuQwGzjM445bZ8IWVECYnyH5ArMKIDHjhhac6/lLUdDLsPs/fIzVt4Xro1GtI9jL+kIHcLOOmeuzjYhXQKBgENB34tPIQMMAp9O7CO2fb2or32BIOVoE2xoq+N+XMO1ncOuERxXOxMXeF4XRKZuAv9gq9GyFFF0ZvcVW4DU/vNfP5efa0TQ9a1Oda7w3i8eF/K8jNyAPb4HSvA5w3b3KwN5LgaQt7JzSwOOXu1SGdCZIqZDjJEBLUD/i0YB/xU5AoGBALZdleVTs3OoNsTL4Qsms/It7HXfvhcAmRJ6dwl1g7A+cPpTW25Avvs+36S/+6tXnuPZ2j0M3x0Zetf0mTc+KLcmOGCfoqvozq1XWBPPng2Jl/VZS7MxtjLrFsWGoMW5N6Sc6zT+mMcyUDi9MdSkzybC2cRr+uSbsEtFEMfZ+ZRX"
                    ],
                    "keyUse": [
                        "ENC"
                    ],
                    "certificate": [
                        "MIICmTCCAYECBgGGSQ+D5TANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAVlbHlrcDAeFw0yMzAyMTMwNDM0NTlaFw0zMzAyMTMwNDM2MzlaMBAxDjAMBgNVBAMMBWVseWtwMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4L+t9yX9BclL5E3AcxuRm2Nvp/+fVmrkgfTpiJIzDvwtX5nX4QctJk6JOx9rsyjjAcFdRwq5mMne2d2GVClYwbX86PvpUVnngfL5PDuAnOYgcfLDpsJzZ2uGpuQ0MOdRHDgYYkRMllVcliE29V/XxvTW5Xks68q+IjsVIguH4QaacH/J4RbQGORqSx69d93Kl29jWOgUxdwDDpzYUGufRor9DXy6pORfjYnwJ7RaufqwPB/zPA2OdDXSIm9FzygELlk9xu9AfDoP1+Hal4wVDBw30bJJuJAqHmSY6nodCqocOvxjCfhYepNaXAoKSjxWlSZvIer+2QwVfU3Qe8qkIQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBI9uylYoxayBSQyLHn37GdjyduhW8M/L9/J0Wc+FBhLFVmvVM3JlEwUgevq0n6P9l+C+G1Su+BnEd6nWwH1AAfLW+Kxcws70zYU9ZDYytIosaM3FCJxl2p92CbZp5RpMokfgsSxcl0A1kmtH7GYqopIPMFXm62/40F6haSN0NIjhEwuwLGaf/EqzF02DXd/f91JAYR+JIP2Fhol2NPrFCVclBM1cbvKhelZfKDJEZ7WnO2/2DLWUnGueYdCQ74Ykz5KlF7/ANmEFt5a36gkZ6A2H1ibaYgn5Di8K/0+j4VKmixMfwybY6BHJlxsKW5C7RvSstaJklz/QTbSae6bvx5"
                    ],
                    "priority": [
                        "100"
                    ],
                    "algorithm": [
                        "RSA-OAEP"
                    ]
                }
            },
            {
                "id": "e224d97c-ef0c-400a-8e9a-ecfc3c5fd516",
                "name": "rsa-generated",
                "providerId": "rsa-generated",
                "subComponents": {},
                "config": {
                    "privateKey": [
                        "MIIEogIBAAKCAQEA7RjkhMEAdXH741YvrZOI04ULh2mHWr93Wl4wHg8Dp/y2mB/sqwCA3TZyRYwe2g1FQ3fPSw5Y/WVQ/R78NYiDNvT1C1NcYCKEGaZowqAjMVm0mvAHu5KnPjl57itpiV3GjeoVga7FpQa3ClLrRPjgByyLMUmr9XSToCSps7q9vVJn9n/IVy/92az0tifxRGCz7vBMq6/deoBPwxBPzpyrcuFNuaHBe76n/cbDQ27COjp09v2zgAtTbCPeeph4h02YfOiWLEE72ewk9KU+yHYjgmb3d+6/oLHB46thI6I+3Z/ikhWYdvrmga/VzNtnedI7dMNS7P9M7VDxiK82CRFK5wIDAQABAoIBACE8qphDmBAJZ7axonhnj2Lw1TIT5JIfohh3I1wAsydYTAkyUdKSUlObFNTUCjp7aW4bpwxjWVftsoyb9zN9TMD7q42oD3HjP3fQYKzb7GMNgL3G5UacYzkxWdA992BMLDqWXz0b5iq2sMUlOkROdn/69L5MO2tq1Au7PVZBLjpnmbBZ65WsEZk9kzARhiCLpEygUx4EPA6M84OZ6BdYgzTJSwvTX9Y6uCF/8QYXDqXHXssykGW0FMM3u9AW/inX8zsP3T/RB/WNUaARxV2DhEiBjs5gsB8AokWcCcfTDTmbzpibPewQPqiRoAfrT2A1wc9Qg0iv2kjS3uCjSb1BEKUCgYEA+RBIR+3XtHpLsNsbJ8exzX/JoqCfGfdCGp6FubVXUz2ZiEnFIh1vVw1M9VNWKS1KPkN+zEgZy2xbw27UEPplUbZtOyZSz/7at+oF3YlG3q90So/spXeKFsrXSYf7zkPTBYoQ+MAm3OUqByFuYRj1jy5NJvqayaRmfDvAfKeDp5UCgYEA87NLkiBbjZ6B/8Sus0IW8pNp7/hZWGHuIsYMgYcADDBX+FfJ6ByTKETc4K0aEW1U/ptrcjhVja8/VZTLPQAjwu1jUpkoRUPddR7s0rNJirfNeL2AGSgujqnOTKOLlgAYpB6bbHBUdgCDSGHtXNjwDD6rQ/5ORKKFRTIyNQto2YsCgYBX0JDbo5VxUclMMwSxEuyy2wJ5744JNq+8+PWHU9PVSpvOfMwfyicOl2bx/I8dd5V8vImBd0549dyo3HOzBMYieGKs/0clhOMTA1VMFfHB5DTpcTNr5+jtPlmH2IVE5Y8KnfJ78iwBqF8YIoZrf8Rc1mNngeZ/gBKObPbiPKHjvQKBgFo7xv2CMaQMTsIvRyhkji6fWphZ8msBR7Vkc3j6TZA1zjzL9JyXB/3fEZG3RnGxc8kaLvyJ01O00dSUVXRuus8QKriIsRqEeFlHbBTQAaj1SYUtVWL7N9HnGdXSsHqH6pfKJW5PYVaX9gQ1DjhUsv01ryBr5vsO2h226lQtt1LlAoGASN/6Kvm8WiDlSWSEjxhSsZTcnkDHDHAPXUd7VXxZfHG5wV6pV61exALDW07ZlbFuIWmiNhsAmovTDCfo1MrlBrCcV6JvJA7QYYCNVufdUE+BBO7mGAWac/pQlORGadxwf6NBUOSbTNhLnC7IYrjM2A9/C5zVcGMaq1tWdAoT6rY="
                    ],
                    "keyUse": [
                        "SIG"
                    ],
                    "certificate": [
                        "MIICmTCCAYECBgGGSQ+DXzANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAVlbHlrcDAeFw0yMzAyMTMwNDM0NThaFw0zMzAyMTMwNDM2MzhaMBAxDjAMBgNVBAMMBWVseWtwMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA7RjkhMEAdXH741YvrZOI04ULh2mHWr93Wl4wHg8Dp/y2mB/sqwCA3TZyRYwe2g1FQ3fPSw5Y/WVQ/R78NYiDNvT1C1NcYCKEGaZowqAjMVm0mvAHu5KnPjl57itpiV3GjeoVga7FpQa3ClLrRPjgByyLMUmr9XSToCSps7q9vVJn9n/IVy/92az0tifxRGCz7vBMq6/deoBPwxBPzpyrcuFNuaHBe76n/cbDQ27COjp09v2zgAtTbCPeeph4h02YfOiWLEE72ewk9KU+yHYjgmb3d+6/oLHB46thI6I+3Z/ikhWYdvrmga/VzNtnedI7dMNS7P9M7VDxiK82CRFK5wIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBJb1VfUPtrF8qe4HzZWWahXNlDFp1C0X4kiveljxB3CS84QYxJ/osy85rrMZpznMJ3Oq3RrBjnbNV3pkFzEDMiPFXbomIsc9dNp0V3eU2PaukoMr5go4K8mbkbok2ELd/wiWtmrIHowXwxx3gzshdhfdvszNpnxo5QgZLKX5np/oM2PA7fLhoMXzconyr2vF39Z9IqMWKwl3DT5gZUi8gl8IC4MtysQFBNJVrJlqVcnJvA97qCk3R8U6xH5iPLowa+qxsvKxY35Kjc7eqBfBNELSBAKYxNIiuPg1IzbC0sPCSzIUx+lnwXMlw9FenxrLNliNesyhILjhSxGktvJEJS"
                    ],
                    "priority": [
                        "100"
                    ]
                }
            },
            {
                "id": "a008f271-8d84-4775-bf5c-33eb36731fdd",
                "name": "hmac-generated",
                "providerId": "hmac-generated",
                "subComponents": {},
                "config": {
                    "kid": [
                        "74841710-5c94-43d7-acbe-711e3a410a34"
                    ],
                    "secret": [
                        "UaEeIa133Hnb0zJMphkD0Mn8ZbHN2-S7OFgYw0C_Wb_TANGPCYtBqvD1Hwr76F3CGMzj8b-J1QofxhlKVzguaQ"
                    ],
                    "priority": [
                        "100"
                    ],
                    "algorithm": [
                        "HS256"
                    ]
                }
            }
        ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
        {
            "id": "f19dc492-a99c-4b1a-b517-2f8d389b4e1a",
            "alias": "Account verification options",
            "description": "Method with which to verity the existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-email-verification",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Verify Existing Account by Re-authentication",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "eccc378a-1f25-49dd-8b5e-4439968419dc",
            "alias": "Authentication Options",
            "description": "Authentication options.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "basic-auth",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "basic-auth-otp",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-spnego",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 30,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "3eba12dc-9a11-4701-9f7f-a95add6ad5a5",
            "alias": "Browser - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-otp-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "804c7a16-3c70-4289-9534-be70c371e1b2",
            "alias": "Direct Grant - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "direct-grant-validate-otp",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "16980ca7-0e68-4bab-9138-80c1292eab46",
            "alias": "First broker login - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-otp-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "6f0e677d-5f7e-41fe-aa75-2f0f339ada4d",
            "alias": "Handle Existing Account",
            "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-confirm-link",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Account verification options",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "c9323c4e-83fa-488f-99b1-a1aa46888bb8",
            "alias": "Reset - Conditional OTP",
            "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-otp",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "631d8e88-2124-46a0-8fc7-b0416091161f",
            "alias": "User creation or linking",
            "description": "Flow for the existing/non-existing user alternatives",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticatorConfig": "create unique user config",
                    "authenticator": "idp-create-user-if-unique",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Handle Existing Account",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "01dc1deb-168e-4497-9961-57ce157012a8",
            "alias": "Verify Existing Account by Re-authentication",
            "description": "Reauthentication of existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-username-password-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "First broker login - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "07996b56-867f-476d-aaea-3518d2d20320",
            "alias": "browser",
            "description": "browser based authentication",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "auth-cookie",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-spnego",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "identity-provider-redirector",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 25,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 30,
                    "autheticatorFlow": true,
                    "flowAlias": "forms",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "c455bd71-bc8b-4945-abb8-522fc9b7c1dc",
            "alias": "clients",
            "description": "Base authentication for clients",
            "providerId": "client-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "client-secret",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "client-jwt",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "client-secret-jwt",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 30,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "client-x509",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 40,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "5d5a97fc-ca34-4f30-8eaa-bdd4af239d2f",
            "alias": "direct grant",
            "description": "OpenID Connect Resource Owner Grant",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "direct-grant-validate-username",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "direct-grant-validate-password",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 30,
                    "autheticatorFlow": true,
                    "flowAlias": "Direct Grant - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "23510321-d106-4165-8720-8d173513f022",
            "alias": "docker auth",
            "description": "Used by Docker clients to authenticate against the IDP",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "docker-http-basic-authenticator",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "8b9c4c9b-a2f0-48b1-ba67-fbafd2b9c151",
            "alias": "first broker login",
            "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticatorConfig": "review profile config",
                    "authenticator": "idp-review-profile",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "User creation or linking",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "f536d50d-9c16-4056-8d3d-0795e3f1392a",
            "alias": "forms",
            "description": "Username, password, otp and other auth forms.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "auth-username-password-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Browser - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "fe7a49b9-bff5-4390-95be-a7975d6bdab8",
            "alias": "http challenge",
            "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "no-cookie-redirect",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Authentication Options",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "1acf30e2-258e-4138-ba7a-edfb927c59c9",
            "alias": "registration",
            "description": "registration flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "registration-page-form",
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": true,
                    "flowAlias": "registration form",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "b8207e61-d372-44b2-9d23-b1dc8e7028a3",
            "alias": "registration form",
            "description": "registration form",
            "providerId": "form-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "registration-user-creation",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-profile-action",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 40,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-password-action",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 50,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-recaptcha-action",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 60,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "3706b221-5210-4061-9693-4017b814bd49",
            "alias": "reset credentials",
            "description": "Reset credentials for a user if they forgot their password or something",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "reset-credentials-choose-user",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-credential-email",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-password",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 30,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 40,
                    "autheticatorFlow": true,
                    "flowAlias": "Reset - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "8f24e80b-ef6f-4523-9280-2b1102ef4e2f",
            "alias": "saml ecp",
            "description": "SAML ECP Profile Authentication Flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "http-basic-authenticator",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        }
    ],
    "authenticatorConfig": [
        {
            "id": "6707942b-ceb2-4564-abb2-e1f0f3936b26",
            "alias": "create unique user config",
            "config": {
                "require.password.update.after.registration": "false"
            }
        },
        {
            "id": "be167b7d-ab32-4694-ac29-219a1c53d5fb",
            "alias": "review profile config",
            "config": {
                "update.profile.on.first.login": "missing"
            }
        }
    ],
    "requiredActions": [
        {
            "alias": "CONFIGURE_TOTP",
            "name": "Configure OTP",
            "providerId": "CONFIGURE_TOTP",
            "enabled": true,
            "defaultAction": false,
            "priority": 10,
            "config": {}
        },
        {
            "alias": "terms_and_conditions",
            "name": "Terms and Conditions",
            "providerId": "terms_and_conditions",
            "enabled": false,
            "defaultAction": false,
            "priority": 20,
            "config": {}
        },
        {
            "alias": "UPDATE_PASSWORD",
            "name": "Update Password",
            "providerId": "UPDATE_PASSWORD",
            "enabled": true,
            "defaultAction": false,
            "priority": 30,
            "config": {}
        },
        {
            "alias": "UPDATE_PROFILE",
            "name": "Update Profile",
            "providerId": "UPDATE_PROFILE",
            "enabled": true,
            "defaultAction": false,
            "priority": 40,
            "config": {}
        },
        {
            "alias": "VERIFY_EMAIL",
            "name": "Verify Email",
            "providerId": "VERIFY_EMAIL",
            "enabled": true,
            "defaultAction": false,
            "priority": 50,
            "config": {}
        },
        {
            "alias": "delete_account",
            "name": "Delete Account",
            "providerId": "delete_account",
            "enabled": false,
            "defaultAction": false,
            "priority": 60,
            "config": {}
        },
        {
            "alias": "webauthn-register",
            "name": "Webauthn Register",
            "providerId": "webauthn-register",
            "enabled": true,
            "defaultAction": false,
            "priority": 70,
            "config": {}
        },
        {
            "alias": "webauthn-register-passwordless",
            "name": "Webauthn Register Passwordless",
            "providerId": "webauthn-register-passwordless",
            "enabled": true,
            "defaultAction": false,
            "priority": 80,
            "config": {}
        },
        {
            "alias": "update_user_locale",
            "name": "Update User Locale",
            "providerId": "update_user_locale",
            "enabled": true,
            "defaultAction": false,
            "priority": 1000,
            "config": {}
        }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "attributes": {
        "cibaBackchannelTokenDeliveryMode": "poll",
        "cibaExpiresIn": "120",
        "cibaAuthRequestedUserHint": "login_hint",
        "oauth2DeviceCodeLifespan": "600",
        "oauth2DevicePollingInterval": "5",
        "clientOfflineSessionMaxLifespan": "0",
        "clientSessionIdleTimeout": "0",
        "parRequestUriLifespan": "60",
        "clientSessionMaxLifespan": "0",
        "clientOfflineSessionIdleTimeout": "0",
        "cibaInterval": "5",
        "realmReusableOtpCode": "false"
    },
    "keycloakVersion": "20.0.1",
    "userManagedAccessAllowed": false,
    "clientProfiles": {
        "profiles": []
    },
    "clientPolicies": {
        "policies": []
    }
}